<div class="hv100 p50 bgb10 oya">
    <div class="g_nm w50 md_w65 bgw round filter-system sh10">
        <div class="p25 conditions"></div>
        <div class="mt30 actions ph20 pv10">
            <div class="buttons l _cb">
                <div class="pointer fs13 g_nm p5 round2x">
                    <div class="vm g_nm mr3 lh10">
                        <span class="iconify fs16" data-icon="mdi:folder-plus-outline"></span>
                    </div>
                    <span class="vm">Add group</span>
                </div>
            </div>
            <div class="sbtn primary">
                Run Filter
            </div>
        </div>
    </div>
</div>


<script>
    var where = [
        {
            type: "group",
            children: [
                {
                    type: "group",
                    children: {
                        Price: {
                            eq: 50,
                            gte: 40
                        },
                        Currency: "USD",
                        Amount: 100,
                    }
                },
                {
                    type: "op",
                    value: "and"
                },
                {
                    type: "group",
                    children: {
                        Amount: 100,
                    }
                },
            ]
        },
        {
            type: "op",
            value: "and"
        },
        {
            type: "group",
            children: {
                Amount: 100,
            }
        },
    ]

    renderElements(where, $(".conditions"));


    function renderElements(wh, selector) {
        for (let i = 0; i < wh.length; i++) {
            let el = wh[i];
            if (el.type == "group") {

                let group = $(`<div class="group p15 round2x"></div>`);

                let ind = '';
                let indecies = selector.data("indecies");
                if (indecies || indecies == 0) {
                    ind = indecies + "," + i;
                } else ind = i;
                group.data("indecies", ind);

                if (!Array.isArray(el.children)) {
                    if (!Object.keys(el.children).length) continue;
                    for (const col in el.children) {
                        if (typeof el.children[col] != 'object') {
                            let div = `
                                <div class="condition round2x">
                                    <div class="handler p10 sq lh10 pointer">
                                        <div class="cc">
                                            <span class="iconify fs20" data-icon="mdi:drag-vertical"></span>
                                        </div>
                                    </div>
                                    <div class="inputs p10">
                                        <div class="w50">
                                            <select name="column" sl>
                                                <option value="Price" ${col == 'Price' ? 'selected' : ''}>Price</option>
                                                <option value="Amount" ${col == 'Amount' ? 'selected' : ''}>Amount</option>
                                                <option value="Currency" ${col == 'Currency' ? 'selected' : ''}>Currency</option>
                                            </select>
                                            <div class="ov la fs20 sq arrow-down">
                                                <div class="cc lh10">
                                                    <span class="iconify fs18" data-icon="mdi:chevron-down"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="w20">
                                            <select name="operator" sl>
                                                <option value="=" selected>=</option>
                                                <option value=">=">>=</option>
                                                <option value="<="><=</option>
                                            </select>
                                            <div class="ov la fs20 sq arrow-down">
                                                <div class="cc lh10">
                                                    <span class="iconify fs18" data-icon="mdi:chevron-down"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="w30">
                                            <input class="w100" type="text" value="${el.children[col]}">
                                        </div>
                                    </div>
                                    <div class="delete p10 sq lh10 pointer" @click="deleteCondition">
                                        <div class="cc">
                                            <span class="iconify fs18" data-icon="mdi:delete-outline"></span>
                                        </div>
                                    </div>
                                </div>
                            `;
                            group.append(div);
                        } else {
                            for (const sub in el.children[col]) {
                                let op = getOp(sub);

                                let div = `
                                    <div class="condition round2x">
                                        <div class="handler p10 sq lh10 pointer">
                                            <div class="cc">
                                                <span class="iconify fs20" data-icon="mdi:drag-vertical"></span>
                                            </div>
                                        </div>
                                        <div class="inputs p10">
                                            <div class="w50">
                                                <select name="column" sl>
                                                    <option value="Price" ${col == 'Price' ? 'selected' : ''}>Price</option>
                                                    <option value="Amount" ${col == 'Amount' ? 'selected' : ''}>Amount</option>
                                                    <option value="Currency" ${col == 'Currency' ? 'selected' : ''}>Currency</option>
                                                </select>
                                                <div class="ov la fs20 sq arrow-down">
                                                    <div class="cc lh10">
                                                        <span class="iconify fs18" data-icon="mdi:chevron-down"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="w20">
                                                <select name="operator" sl>
                                                    <option value="eq" ${sub == 'eq' ? 'selected' : ''}>${op}</option>
                                                    <option value="gte" ${sub == 'gte' ? 'selected' : ''}>${op}</option>
                                                    <option value="lte" ${sub == 'lte' ? 'selected' : ''}>${op}</option>
                                                </select>
                                                <div class="ov la fs20 sq arrow-down">
                                                    <div class="cc lh10">
                                                        <span class="iconify fs18" data-icon="mdi:chevron-down"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="w30">
                                                <input class="w100" type="text" value="${el.children[col][sub]}">
                                            </div>
                                        </div>
                                        <div class="delete p10 sq lh10 pointer"  @click="deleteCondition">
                                            <div class="cc">
                                                <span class="iconify fs18" data-icon="mdi:delete-outline"></span>
                                            </div>
                                        </div>
                                    </div>
                                `;
                                group.append(div);
                            }
                        }
                    }
                }
                if (el.children.length == 0) continue;


                selector.append(group);
                if (Array.isArray(el.children)) renderElements(el.children, group);

                let buttons = $(`
                        <div class="buttons mt20 l _cb">
                            <div class="pointer fs13 g_nm p5 round2x ml10">
                                <div class="vm g_nm mr3 lh10">
                                    <span class="iconify fs16" data-icon="mdi:folder-plus-outline"></span>
                                </div>
                                <span class="vm">Add inner group</span>
                            </div>
                        </div>
                    `);

                if (!Array.isArray(el.children)) {
                    buttons.prepend(`
                        <div class="pointer fs13 g_nm p5 round2x" @click="addCondition">
                            <div class="vm g_nm mr3 lh10">
                                <span class="iconify fs16" data-icon="mdi:plus"></span>
                            </div>
                            <span class="vm">Add Condition</span>
                        </div>
                    `);
                }
                group.append(buttons);

            } else if (el.type == "op") {
                if (wh[i - 1] && wh[i - 1].type == "group") {
                    if (Array.isArray(wh[i - 1].children) && wh[i - 1].children.length == 0) continue;
                    if ((!Array.isArray(wh[i - 1].children)) && Object.keys(wh[i - 1].children).length == 0) continue;
                } else continue;

                if (wh[i + 1] && wh[i + 1].type == "group") {
                    if (Array.isArray(wh[i + 1].children) && wh[i + 1].children.length == 0) continue;
                    if ((!Array.isArray(wh[i + 1].children)) && Object.keys(wh[i + 1].children).length == 0) continue;
                } else continue;

                let and_or = `
                    <div class="g_nm and-or">
                        <select name="" sl sl-class="small">
                            <option value="and" ${el.value == 'and' ? 'selected' : ''}>And</option>
                            <option value="or" ${el.value == 'or' ? 'selected' : ''}>Or</option>
                        </select>
                        <div class="ov la fs20 sq arrow-down">
                            <div class="cc lh10">
                                <span class="iconify fs16" data-icon="mdi:chevron-down"></span>
                            </div>
                        </div>
                    </div>
                `;
                selector.append(and_or);
            }
        }
    }

    function addCondition(ev, el) {
        let indecies = el.closest(".group").data("indecies").toString();
        let obj = where;
        for (let i = 0; i < indecies.split(",").length; i++) {
            const elem = indecies.split(",")[i];
            if (obj.hasOwnProperty("children")) obj = obj.children;
            obj = obj[elem];
        }

        obj.children['Hello'] = 0;

        $(".conditions").html('');
        renderElements(where, $(".conditions"));
        globalWatch();
    }

    function deleteCondition(ev, el) {
        let indecies = el.closest(".group").data("indecies").toString();
        let obj = where;
        let beforeLastObj = where;

        let arr = indecies.split(",");
        for (let i = 0; i < arr.length; i++) {
            const elem = arr[i];
            if (obj.hasOwnProperty("children")) obj = obj.children;
            obj = obj[elem];

            if (i != arr.length - 1) beforeLastObj = beforeLastObj[elem];
        }

        let column = el.closest(".condition").find("[name='column']").val();
        let op = el.closest(".condition").find("[name='operator']").val();

        if (typeof obj.children[column] == 'object') {
            if (obj.children[column][op]) delete obj.children[column][op];
            if (!Object.keys(obj.children[column]).length) delete obj.children[column];
        } else delete obj.children[column];

        let wDelete = false;
        if (Array.isArray(obj.children) && obj.children.length == 0) wDelete = true;
        if ((!Array.isArray(obj.children)) && Object.keys(obj.children).length == 0) wDelete = true;

        if (Array.isArray(beforeLastObj.children) && wDelete) {
            let ind = beforeLastObj.children.indexOf(obj);

            if (beforeLastObj.children[ind + 1] && beforeLastObj.children[ind + 1].type == "op") {
                beforeLastObj.children.splice(ind + 1, 1);
            }

            beforeLastObj.children.splice(ind, 1);
        }

        $(".conditions").html('');
        renderElements(where, $(".conditions"));
        globalWatch();
    }

    function getOp(sub) {
        let op = '=';
        switch (sub) {
            case 'gte':
                op = ">="
                break;
            case 'gt':
                op = ">"
                break;
            default:
                break;
        }

        return op;
    }



</script>


<style>
    ._cb {
        color: #0069d9;
    }

    .filter-system input {
        padding: 3px 15px;
        outline: none;
        border: 1px solid #dadada;
        border-radius: 7px;
        height: 34px !important;
    }

    .select2-container--default .select2-results__option--highlighted.select2-results__option--selectable {
        background-color: #0069d9;
    }

    .small .select2-results__option--selectable {
        font-size: 11px !important;
        padding: 2px !important;

    }

    .filter-system .select2 .select2-selection__arrow {
        display: none !important;
    }

    .filter-system .select2-selection.select2-selection--single {
        border: 1px solid #dadada;
        border-radius: 7px;
        height: 34px !important;
        padding: 2px 0px !important;
        font-weight: 600;
    }

    .filter-system .select2-selection__rendered {
        padding: 0 15px !important;
    }

    .filter-system .and-or {
        width: 50px;
        margin-top: 7px;
        margin-bottom: 7px;
    }

    .filter-system .and-or::before {
        content: '';
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        top: -7px;
        height: 10px;
        width: 1px;
        background-color: #0069d9;
    }

    .filter-system .and-or::after {
        content: '';
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        bottom: -7px;
        height: 8px;
        width: 1px;
        background-color: #0069d9;
    }

    .filter-system .and-or .select2-selection.select2-selection--single {
        border-radius: 10px;
        border: 1px solid #0069d9;
        height: 20px !important;
        padding: 0px !important;
        font-size: 11px !important;
        font-weight: 600;
        background-color: #ECEFFB;
    }

    .filter-system .and-or .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 19px !important;
        padding-left: 5px !important;
        padding-right: 5px !important;
    }


    .filter-system .arrow-down {
        z-index: 99999999;
        color: #0069d9;
        pointer-events: none;
    }


    .filter-system .group {
        border: 1px solid #dadada;
    }

    .filter-system .group:hover {
        border-color: #0069d9;
    }

    .filter-system .condition {
        border: 1px solid #dadada;
        background-color: #f9fbfc;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .filter-system .condition:not(:first-of-type) {
        margin-top: 20px;
    }

    .filter-system .condition .inputs {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 12px;
        border-left: 1px solid #dadada;
        border-right: 1px solid #dadada;
    }

    .filter-system .condition .handler {
        width: 40px;
        color: #92959d;
    }

    .filter-system .condition .delete {
        width: 35px;
        color: #92959d;
    }

    .filter-system .actions {
        border-top: 1px solid #dadada;
    }

    .filter-system .actions {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
</style>